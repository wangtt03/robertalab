// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ru');

goog.require('Blockly.Msg');

Blockly.Msg.ACCELERATION = "acceleration mg";  // untranslated
Blockly.Msg.ACCELERATION_TOOLTIP = "Get the acceleration value in milli-gravitys.";  // untranslated
Blockly.Msg.ACCELEROMETER_ROTATION = "rotation °";  // untranslated
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "Маркер дополнительной активности.";
Blockly.Msg.ACTOR_TOOLTIP = "Представляет любой актор.";
Blockly.Msg.ADD_COMMENT = "Добавить комментарий";
Blockly.Msg.ANALOG = "analog";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Представляет плату Bot'n Roll c подключенными актюаторами и датчиками. Также доступны  встроенные акторы и датчики, такие как кнопки, дисплей и прочие.";
Blockly.Msg.AUTH = "Пожалуйста, авторизуйте это приложение, чтоб можно было сохранять вашу работу и чтобы дать возможность вам делиться ей.";
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Возвращает текущий заряд батареи.";
Blockly.Msg.BOB3_ARM = "arm";  // untranslated
Blockly.Msg.BOB3_ARM_PAIR = "sensor pair";  // untranslated
Blockly.Msg.BOTH = "Оба";
Blockly.Msg.BRICKLIGHT = "Подсветка программного блока";
Blockly.Msg.BRICKLIGHT_BLUE = "Синий";
Blockly.Msg.BRICKLIGHT_COLOR = "Цвет";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "Двойное мигание";
Blockly.Msg.BRICKLIGHT_FLASH = "Мигание";
Blockly.Msg.BRICKLIGHT_GREEN = "Зеленый";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Выключить подсветку программного  блока";
Blockly.Msg.BRICKLIGHT_ON = "Включить";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Включить подсветку программного  блока";
Blockly.Msg.BRICKLIGHT_ORANGE = "Оранжевый";
Blockly.Msg.BRICKLIGHT_RED = "Красный";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Сбрасывает подсветку программного блока: зеленый и мигание.";
Blockly.Msg.BRICK_TRACK_WIDTH = "Ширина колеи ";
Blockly.Msg.BRICK_WHEEL_DIAMETER = "Диаметр колеса";
Blockly.Msg.BUTTON_DO_SHARE = "Поделиться";
Blockly.Msg.BUTTON_EMPTY_LIST = "Пустой список";
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Represents Calliope, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.CENTER = "Центр";
Blockly.Msg.CHANGE_VALUE_TITLE = "Измените значение:";
Blockly.Msg.CHAT = "Общайтесь со своим коллегой, печатая в этом поле!";
Blockly.Msg.CLEAN_UP = "Убрать блоки";
Blockly.Msg.COLLAPSE_ALL = "Свернуть блоки";
Blockly.Msg.COLLAPSE_BLOCK = "Свернуть блок";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "цвет 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "цвет 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "доля цвета 1";
Blockly.Msg.COLOUR_BLEND_TITLE = "смешать";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Возвращает текущее показание датчика цвета.";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ru.wikipedia.org/wiki/Цвет";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Выберите цвет из палитры.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "случайный цвет";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Выбирает цвет случайным образом.";
Blockly.Msg.COLOUR_RGB_BLUE = "синего";
Blockly.Msg.COLOUR_RGB_GREEN = "зелёного";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "красного";
Blockly.Msg.COLOUR_RGB_TITLE = "цвет из";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Создаёт цвет с указанной пропорцией  красного, зеленого и синего.  Все значения должны быть между 0 и 100.";
Blockly.Msg.COLOUR_RGB_WHITE = "white";  // untranslated
Blockly.Msg.COLOUR_TOOLTIP = "Представляет датчик цвета.";
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Представляет компас.";
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "Разное направление вращения на левом и правом моторах!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "В конфигурации отсутствует левый мотор!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Левый мотор не регулирован!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "На заданном порте отсутствует мотор!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "В конфигурации отсутствует правый мотор!  ";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Правый мотор не регулирован!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "В Вашей конфигурации присутствует более одного левого мотора!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "В Вашей конфигурации присутствует более одного правого мотора!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "Этот датчик не поделючен к порту!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "К данному порту подключен неподходящий датчик!";
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Click here to delete your robot configuration.";  // untranslated
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.CONNECTION_CHECK = "Активно ли подключение к роботу %1?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Проверить активно ли подключение к роботу.";
Blockly.Msg.CONNECTION_CONNECT = "Подключиться к роботу использую имя";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "from connection";  // untranslated
Blockly.Msg.CONNECTION_FROM_ROBOT = "от робота";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Reads a message over one of the channels (0 - 255). The default channel is 0.";  // untranslated
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Sends a message to another microBoard. You can specify a signal strength from 0 - 7, where 0 is very low and 7 is the strongests. The message is send over channel 0 unless you specify another one.";  // untranslated
Blockly.Msg.CONNECTION_OVER_CHANNEL = "используя канал";
Blockly.Msg.CONNECTION_POWER = "with strength";  // untranslated
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";  // untranslated
Blockly.Msg.CONNECTION_RECEIVED_DATA = "Получить сообщение";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Ждет заданного вами в соединении сообщения от робота.";
Blockly.Msg.CONNECTION_SEND_DATA = "Послать сообщение";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Посылает сообщение другому роботу.";
Blockly.Msg.CONNECTION_SET_CHANNEL = "set channel to %1";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Sets the channel for sending and receiving messages. Can be set from 0 to 255.";  // untranslated
Blockly.Msg.CONNECTION_START_TOOLTIP = "Пытается установить Bluetooth-соединение с другим роботом.";
Blockly.Msg.CONNECTION_TOOLTIP = "Соединение робота";
Blockly.Msg.CONNECTION_TO_CONNECTION = "к соединению";
Blockly.Msg.CONNECTION_TO_ROBOT = "к роботу";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "ждать соединения";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Ждет Bluetooth-соединения.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "выйти из цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "перейти к следующему шагу цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Прерывает этот цикл.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Пропускает остаток цикла и переходит к следующему шагу.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Предупреждение: этот блок может использоваться только внутри цикла.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "для каждого элемента %1 в списке %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "цикл по %1 от %2 до %3 с шагом %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Добавляет условие к блоку \"если\"";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Добавить заключительный подблок для случая, когда все условия ложны.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "иначе";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "иначе если";
Blockly.Msg.CONTROLS_IF_MSG_IF = "если";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Если условие истинно, выполняет команды.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "выполнить";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "повторить %1 раз";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Выполняет некоторые команды несколько раз.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "повторять, пока не";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "повторять, пока";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Пока значение ложно, выполняет команды";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Пока значение истинно, выполняет команды.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Дата актуализации";
Blockly.Msg.DATATABLE_BY = "by";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATIONS = "конфигурации";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Название конфигурации";
Blockly.Msg.DATATABLE_CREATED_BY = "Создатель";
Blockly.Msg.DATATABLE_CREATED_ON = "Дата создания";
Blockly.Msg.DATATABLE_DATE = "modified";  // untranslated
Blockly.Msg.DATATABLE_NUMBER_OF_BLOCKS = "blocks";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "программы";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Название программы";
Blockly.Msg.DATATABLE_SHARED = "Предоставленный для общего доступа";
Blockly.Msg.DATATABLE_SHARED_WITH = "Предоставить доступ ";
Blockly.Msg.DELETE_ALL_BLOCKS = "Удалить все блоки (%1)?";
Blockly.Msg.DELETE_BLOCK = "Удалить блок";
Blockly.Msg.DELETE_X_BLOCKS = "Удалить %1 блоков";
Blockly.Msg.DIGITAL = "digital";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Отключить блок";
Blockly.Msg.DISPLAY_ANIMATION = "animation";  // untranslated
Blockly.Msg.DISPLAY_CHARACTER = "character";  // untranslated
Blockly.Msg.DISPLAY_CLEAR = "очистить дисплей";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Очищает дисплей.";
Blockly.Msg.DISPLAY_COL = "в колонке";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Returns the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Returns the brightness for this led. 0 means the led is turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_IMAGE = "image";  // untranslated
Blockly.Msg.DISPLAY_PICTURE = "картинка";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "глаза закрыты";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "глаза открыты";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "цветы";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "очки";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "тахо";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Выводит картинку на экран.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "brightness";  // untranslated
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";  // untranslated
Blockly.Msg.DISPLAY_ROW = "в строке";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Sets the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Sets the brightness for this led. 0 means the led is turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_SHOW = "показать";
Blockly.Msg.DISPLAY_TEXT = "текст";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Выводит текст на экран.";
Blockly.Msg.DUPLICATE_BLOCK = "Скопировать";
Blockly.Msg.ENABLE_BLOCK = "Включить блок";
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Возвращает текущее показание энкодера.";
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Сбрасывает энкодер.";
Blockly.Msg.EV3BRICK_TOOLTIP = "Представляет программный блок EV3 с подключенными актюаторами и датчик. Также доступны встроенные актюаторы и сенсоры, такие как кнопки, дисплей и прочие.";
Blockly.Msg.EXPAND_ALL = "Развернуть блоки";
Blockly.Msg.EXPAND_BLOCK = "Развернуть блок";
Blockly.Msg.EXTERNAL_INPUTS = "Вставки снаружи";
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Represents a flame sensor.";  // untranslated
Blockly.Msg.FOR = "для";
Blockly.Msg.GET = "вернуть";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Возвращает текущее показание выбранного датчика.";
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Возвращает текущее показание гиросенсор.";
Blockly.Msg.GYRO_RESET_TOOLTIP = "Сбрасывает гиросенсор.";
Blockly.Msg.GYRO_TOOLTIP = "Представляет гиросенсор.";
Blockly.Msg.HELP = "Справка";
Blockly.Msg.IF_TOOLTIP = "Проверяет увловие 'если'. Если условие выполняется, выполняет действие в условном блоке.";
Blockly.Msg.IMAGE_GET_TOOLTIP = "Returns the chosen image.";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "angry";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "asleep";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "butterfly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "chessboard";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "confused";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "cow";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "small diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "duck";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "fabulous";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "ghost";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "giraffe";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "small heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "house";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "meh!";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "music crotchet";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "music quaver";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "music quavers";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "no";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "pacman";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "pitchfork";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "rabbit";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "rollerskate";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "sad";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "silly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "skull";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "smile";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "snake";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "small square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "stickfigure";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "sword";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "target";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "tortoise";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "triangle";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "triangle left";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "T-shirt";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "umbrella";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "xmas";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "yes";  // untranslated
Blockly.Msg.IMAGE_INVERT = "invert";  // untranslated
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Inverts the image. Each pixel with value 0 or none will be set to # or 9 and pixels with value # or 9 will be set to 0 or none.";  // untranslated
Blockly.Msg.IMAGE_SHIFT = "shift";  // untranslated
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Shifts the image in the given direction by the given number";  // untranslated
Blockly.Msg.IMAGE_TOOLTIP = "Creates an image for the display.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Возвращает текущее показание инфракрасного датчика.";
Blockly.Msg.INFRARED_TOOLTIP = "Представляет инфракрасный датчик.";
Blockly.Msg.INLINE_INPUTS = "Вставки внутри";
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Gets the current reading of one of the axises of the joystick";  // untranslated
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Нажата ли выбранная кнопка?";
Blockly.Msg.LED_OFF = "turn LED off";  // untranslated
Blockly.Msg.LED_ON = "turn LED on";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP = "Turns the LED on and changes the color.";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Представляет 8 датчиков освещения";
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Возвращает текущее показание датчика освещения.";
Blockly.Msg.LIGHT_TOOLTIP = "Представляет датчика освещения.";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "создать пустой список";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Возвращает список длины 0, не содержащий данных";
Blockly.Msg.LISTS_CREATE_TITLE = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "создать список из";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Добавляет элемент к списку.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Создаёт список с любым числом элементов.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "первый";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "№ с конца";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "взять";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "взять и удалить";
Blockly.Msg.LISTS_GET_INDEX_LAST = "последний";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "произвольный";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "удалить";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Возвращает элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Удаляет и возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Удаляет и возвращает элемент в указанной позиции списка (№1 -  последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Удаляет и возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Удаляет и возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Удаляет и возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Удаляет первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Удаляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Удаляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Удаляет последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Удаляет случайный элемент списка.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "по № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "по №";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "по последний";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "взять подсписок с первого";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "взять подсписок с № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "взять подсписок с №";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Создаёт копию указанной части списка.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "найти первое вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "найти последнее вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает 0, если элемент не найден.";
Blockly.Msg.LISTS_INLIST = "в списке";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Возвращает значение истина, если список пуст.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "длина %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Возвращает длину списка.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "создать список из элемента %1, повторяющегося %2 раз";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Создаёт список, состоящий из заданного числа копий элемента.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "=";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "вставить в";
Blockly.Msg.LISTS_SET_INDEX_SET = "присвоить";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Вставляет элемент в начало списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Вставляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Вставляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Добавляет элемент в конец списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Вставляет элемент в случайное место в списке.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Присваивает значение первому элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Присваивает значение элементу в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Присваивает значение элементу в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Присваивает значение последнему элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Присваивает значение случайному элементу списка.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "по возрастанию";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "по убыванию";
Blockly.Msg.LISTS_SORT_TITLE = "сортировать %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Сортировать копию списка.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "сделать список из текста";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "собрать текст из списка";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Соединяет сптсок текстов в один текст с разделителями.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Разбивает текст в список текстов, по разделителям.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "с разделителем";
Blockly.Msg.LIST_BACK_TOOLTIP = "Back to previous view.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "ложь";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Возвращает значение истина или ложь.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "истина";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Возвращает значение истина, если вставки равны.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Возвращает значение истина, если первая вставка больше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Возвращает значение истина, если первая вставка больше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Возвращает значение истина, если первая вставка меньше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Возвращает значение истина, если вставки не равны.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "не %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Возвращает значение истина, если вставка ложна.  Возвращает значение ложь, если вставка истинна.";
Blockly.Msg.LOGIC_NULL = "ничто";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Возвращает ничто.";
Blockly.Msg.LOGIC_OPERATION_AND = "и";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "или";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Возвращает значение истина, если обе вставки истинны.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "выбрать по";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "если ложь";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "если истина";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
Blockly.Msg.LOOP = "повторять пока";
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Бесконечно повторять действие. ";
Blockly.Msg.LOOP_FOREVER = "повторять бесконечно";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ru.wikipedia.org/wiki/Арифметика";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Возвращает сумму двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Возвращает частное от деления первого числа на второе.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Возвращает разность двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Возвращает произведение двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Возвращает первое число, возведённое в степень второго числа.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
Blockly.Msg.MATH_CHANGE_TITLE = "увеличить %1 на %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Добавляет число к переменной '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ru.wikipedia.org/wiki/Математическая_константа";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "ограничить %1 снизу %2 сверху %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Ограничивает число нижней и верхней границами (включительно).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "делится на";
Blockly.Msg.MATH_IS_EVEN = "чётное";
Blockly.Msg.MATH_IS_NEGATIVE = "отрицательное";
Blockly.Msg.MATH_IS_ODD = "нечётное";
Blockly.Msg.MATH_IS_POSITIVE = "положительное";
Blockly.Msg.MATH_IS_PRIME = "простое";
Blockly.Msg.MATH_IS_TOOLTIP = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
Blockly.Msg.MATH_IS_WHOLE = "целое";
Blockly.Msg.MATH_MODULO_HELPURL = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
Blockly.Msg.MATH_MODULO_TITLE = "остаток от %1 : %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Возвращает остаток от деления двух чисел.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://ru.wikipedia.org/wiki/Число";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Число.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "среднее арифметическое списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "наибольшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "медиана списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "наименьшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "моды списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "случайный элемент списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "стандартное отклонение списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "сумма списка";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Возвращает среднее арифметическое списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Возвращает наибольшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Возвращает медиану списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Возвращает наименьшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Возвращает список наиболее часто встречающихся элементов списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Возвращает стандартное отклонение списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Возвращает сумму всех чисел в списке.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "случайное число от 0 (включительно) до 1";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "случайное целое число от %1 для %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Возвращает случайное число между двумя заданными пределами (включая и их).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://ru.wikipedia.org/wiki/Округление";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "округлить";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "округлить к меньшему";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "округлить к большему";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Округляет число до большего или меньшего.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://ru.wikipedia.org/wiki/Квадратный_корень";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "модуль";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "квадратный корень";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Возвращает модуль числа";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Возвращает е в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Возвращает натуральный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Возвращает десятичный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Возвращает противоположное число.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Возвращает 10 в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Возвращает квадратный корень числа.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Возвращает арккосинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Возвращает арксинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Возвращает арктангенс (в градусах)";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Возвращает косинус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Возвращает синус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Возвращает тангенс угла в градусах.";
Blockly.Msg.ME = "Мне";
Blockly.Msg.MENU_ABOUT = "о";
Blockly.Msg.MENU_ATTACH = "присоединить ...";
Blockly.Msg.MENU_BEGINNER = "начинающий";
Blockly.Msg.MENU_CHANGE = "изменить ...";
Blockly.Msg.MENU_CHECK = "проверить";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Download the source code of your program on the computer";  // untranslated
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Refresh the source code, if you have changed the NEPO Block's.";  // untranslated
Blockly.Msg.MENU_CONNECT = "соеднить ...";
Blockly.Msg.MENU_CREATE_LINK = "create program link ...";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "удалить пользователя ...";
Blockly.Msg.MENU_EDIT = "редактировать";
Blockly.Msg.MENU_EDIT_TOOLTIP = "редактировать";
Blockly.Msg.MENU_EV3 = "Подготовка робота";
Blockly.Msg.MENU_EXPERT = "Эксперт";
Blockly.Msg.MENU_EXPORT_PROG = "Экспортировать программу";
Blockly.Msg.MENU_FAQ = "Вопросы и ответы";
Blockly.Msg.MENU_GALLERY = "gallery";  // untranslated
Blockly.Msg.MENU_GALLERY_TOOLTIP = "gallery";  // untranslated
Blockly.Msg.MENU_GENERAL = "Общая помощь";
Blockly.Msg.MENU_HELP = "помощь";
Blockly.Msg.MENU_HELP_TOOLTIP = "помощь";
Blockly.Msg.MENU_IMPORT_PROG = "импортировать программу";
Blockly.Msg.MENU_LANGUAGE = "языки";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "языки";
Blockly.Msg.MENU_LIST = "список ...";
Blockly.Msg.MENU_LIST_CONF = "мои конфигурации ...";
Blockly.Msg.MENU_LIST_PROG = "мои программы ...";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "примеры программ ...";
Blockly.Msg.MENU_LOGGING = "выполняется вход";
Blockly.Msg.MENU_LOG_IN = "вход ...";
Blockly.Msg.MENU_LOG_OUT = "выход";
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Ваша программа успешно загружена.";
Blockly.Msg.MENU_NEW = "новый ...";
Blockly.Msg.MENU_PROGRAMMING = "программирование с NEPO";
Blockly.Msg.MENU_PROPERTIES = "свойства";
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Open/close help view";  // untranslated
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Open/close info view";  // untranslated
Blockly.Msg.MENU_ROBOT = "робот";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "информация";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "информация о роботе";
Blockly.Msg.MENU_ROBOT_TOOLTIP = "роботы";
Blockly.Msg.MENU_SAVE = "сохранить";
Blockly.Msg.MENU_SAVE_AS = "сохранить как ...";
Blockly.Msg.MENU_SHOW_AGAIN = "снова показать приветствие";
Blockly.Msg.MENU_SHOW_CODE = "показать код";
Blockly.Msg.MENU_SIM_BACK = "Назад";
Blockly.Msg.MENU_SIM_DRAW = "Среда для Рисования";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Upload your own simulation background image, it will be appended at the end of the background's list.";  // untranslated
Blockly.Msg.MENU_SIM_MATH = "Математическая Среда";
Blockly.Msg.MENU_SIM_RESCUE = "Спасательная Среда";
Blockly.Msg.MENU_SIM_ROBERTA = "Среда Роберты";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "открыть/закрыть вид от лица робота";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "изменить среду";
Blockly.Msg.MENU_SIM_SIMPLE = "Простая среда";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Start your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_STOP = "Стоп";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Stop your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Open/close the sensors' data view.";  // untranslated
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad scene";  // untranslated
Blockly.Msg.MENU_START_BRICK = "запустить на программном блоке";
Blockly.Msg.MENU_START_SIM = "запустить в симуляции";
Blockly.Msg.MENU_STATE_INFO = "информация о состоянии";
Blockly.Msg.MENU_TOOLBOX = "NEPO-блоки";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-блоки начинающий";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-блоки эксперт";
Blockly.Msg.MENU_USER = "вход";
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "информация и пользователе";
Blockly.Msg.MENU_USER_TOOLTIP = "пользователь";
Blockly.Msg.MENU_ZOOM = "зум";
Blockly.Msg.MENU_ZOOM_IN = "приблизить";
Blockly.Msg.MENU_ZOOM_OUT = "отдалить";
Blockly.Msg.MENU_ZOOM_RESET = "сбросить зум";
Blockly.Msg.MESSAGE_ADDED_USER = "User »$« was added";  // untranslated
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Конфигурация '$' удалена.";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Ваша программа теперь проверена!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Ваша конфигурация сохранена.";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Ваша конфигурация сохранена как '$'.";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Your group has been created";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Ваша программа сохранена.";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Ваша программа сохранена как '$'.";
Blockly.Msg.MESSAGE_EDIT_START = "Ваша программа '$' будет запущена через несколько мгновений.";
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Обнаружен конфликт между версией прошивки вашего робота и Open Roberta Lab. Пожалуйста. свяжитесь с нами.";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Group »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Пожалуйста, введите имя пользователя в правильном формате. Имя пользователя должно начинаться с буквы и содержать только буквы и цифры.";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Недоступно";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Программа $ была удалена";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Пожалуйста, повторно соедините Вашего робота с Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "С Вашим роботом $ установлено соединение ";
Blockly.Msg.MESSAGE_USER_DELETED = "Пользователь удален";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "User »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGIN = "Привет, '$";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Вы вышли";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "режим";
Blockly.Msg.MODE_ACCELERATION = "acceleration";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "естественное освещение";
Blockly.Msg.MODE_ANGLE = "угол";
Blockly.Msg.MODE_CLOSE = "close";  // untranslated
Blockly.Msg.MODE_COLOUR = "цвет";
Blockly.Msg.MODE_DEGREE = "градус";
Blockly.Msg.MODE_DISTANCE = "расстояние";
Blockly.Msg.MODE_LIGHT = "свет";
Blockly.Msg.MODE_OBSTACLE = "препятствие";
Blockly.Msg.MODE_OPEN = "open";  // untranslated
Blockly.Msg.MODE_ORIENTATION = "orientation";  // untranslated
Blockly.Msg.MODE_PRESENCE = "присутствие";
Blockly.Msg.MODE_RATE = "скорость";
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "вращение";
Blockly.Msg.MODE_SOUND = "звук";
Blockly.Msg.MOTOR = "мотор";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Начинает движения робота с определенной скростью и останавливается после того как он пройдет определенное расстояние.";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Начинает движения робота с определенной скростью.";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Останавливает робота.";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Поворачивает робота на определенный угол (в градусах).";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Поворачивает робота.";
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Представляет ";
Blockly.Msg.MOTOR_BACKWARD = "назад";
Blockly.Msg.MOTOR_BIG = "большой";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Представляет большой моторю";
Blockly.Msg.MOTOR_BRAKE = "тормоз";
Blockly.Msg.MOTOR_DEGREE = "градус";
Blockly.Msg.MOTOR_DISTANCE = "расстояние, см";
Blockly.Msg.MOTOR_DRIVE = "ехать";
Blockly.Msg.MOTOR_FLOAT = "свободное движение";
Blockly.Msg.MOTOR_FOREWARD = "вперед";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Возвращает текущую мозность поданную на мотор.";
Blockly.Msg.MOTOR_LEFT = "левый";
Blockly.Msg.MOTOR_MIDDLE = "средний";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Представляет средний мотор.";
Blockly.Msg.MOTOR_NONE = "ничего";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Включает мотор и останавливает его после поворота на заданное количество оборотов/градусов.";
Blockly.Msg.MOTOR_ON_TOOLTIP = "Включаеи мотор и подает на него определеннуб мохность.";
Blockly.Msg.MOTOR_OTHER = "другой потребитель мощности";
Blockly.Msg.MOTOR_PAN = "рысканье";
Blockly.Msg.MOTOR_PORT = "порт мотора";
Blockly.Msg.MOTOR_REGULATION = "регулировка";
Blockly.Msg.MOTOR_RIGHT = "правый";
Blockly.Msg.MOTOR_ROTATION = "вращение";
Blockly.Msg.MOTOR_ROTATION_REVERSE = "направление вращения";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Устанавлевает мощность подаваемую на этот мотор.";
Blockly.Msg.MOTOR_SIDE = "сторона";
Blockly.Msg.MOTOR_SPEED = "скорость";
Blockly.Msg.MOTOR_STEER = "движение по окружности";
Blockly.Msg.MOTOR_STOP = "остановка";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Останавливает этот мотор.";
Blockly.Msg.MOTOR_TILT = "наклон";
Blockly.Msg.MOTOR_TURN = "поворот";
Blockly.Msg.NAO_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";  // untranslated
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation.";  // untranslated
Blockly.Msg.NAO_ANSWER = "answer";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE = "apply posture";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot goes into the selected posture.";  // untranslated
Blockly.Msg.NAO_BLINK = "blink";  // untranslated
Blockly.Msg.NAO_CAMERA = "camera";  // untranslated
Blockly.Msg.NAO_CAMERA_BOTTOM = "bottom";  // untranslated
Blockly.Msg.NAO_CAMERA_TOP = "top";  // untranslated
Blockly.Msg.NAO_CHAT_TOOLTIP = "Add a reaction if a word is recognized.";  // untranslated
Blockly.Msg.NAO_CURRENT = "electric current of";  // untranslated
Blockly.Msg.NAO_DETECTFACE = "detect face";  // untranslated
Blockly.Msg.NAO_DETECTFACE_TOOLTIP = "Detect a face previously saved under a given name";  // untranslated
Blockly.Msg.NAO_DIALOG_TOOLTIP = "The robot tries to recognize the phrase and answers on success.";  // untranslated
Blockly.Msg.NAO_FILENAME = "filename";  // untranslated
Blockly.Msg.NAO_FORGETFACEOF = "forget face of";  // untranslated
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Forget a face previously saved under a given name";  // untranslated
Blockly.Msg.NAO_FRAME = "frame";  // untranslated
Blockly.Msg.NAO_FRAME_TORSO = "torso";  // untranslated
Blockly.Msg.NAO_FRAME_WORLD = "world";  // untranslated
Blockly.Msg.NAO_FSR = "force sensitive resistor";  // untranslated
Blockly.Msg.NAO_FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.NAO_GETCURRENT_TOOLTIP = "Get the electric current from the selected joint.";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE = "get language";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get the volume.";  // untranslated
Blockly.Msg.NAO_GYROMETER = "gyrometer";  // untranslated
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";  // untranslated
Blockly.Msg.NAO_HAND = "hand";  // untranslated
Blockly.Msg.NAO_HAND_TOOLTIP = "Open/close a hand.";  // untranslated
Blockly.Msg.NAO_HEADSENSOR = "head sensor";  // untranslated
Blockly.Msg.NAO_INTENSITY = "intensity";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HAND = "hand";  // untranslated
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";  // untranslated
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";  // untranslated
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";  // untranslated
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";  // untranslated
Blockly.Msg.NAO_LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.NAO_LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.NAO_LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.NAO_LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.NAO_LANGUAGE_DANISH = "Dansk";  // untranslated
Blockly.Msg.NAO_LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.NAO_LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.NAO_LANGUAGE_FINNISH = "Suomi";  // untranslated
Blockly.Msg.NAO_LANGUAGE_FRENCH = "Français";  // untranslated
Blockly.Msg.NAO_LANGUAGE_GERMAN = "Deutsch";  // untranslated
Blockly.Msg.NAO_LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.NAO_LANGUAGE_ITALIAN = "Italiano";  // untranslated
Blockly.Msg.NAO_LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.NAO_LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.NAO_LANGUAGE_NORWEGIAN = "Norsk";  // untranslated
Blockly.Msg.NAO_LANGUAGE_POLISH = "Polski";  // untranslated
Blockly.Msg.NAO_LANGUAGE_PORTUGUESE = "Português";  // untranslated
Blockly.Msg.NAO_LANGUAGE_RUSSIAN = "Українська";  // untranslated
Blockly.Msg.NAO_LANGUAGE_SPANISH = "Español";  // untranslated
Blockly.Msg.NAO_LANGUAGE_SWEDISH = "Svensk";  // untranslated
Blockly.Msg.NAO_LANGUAGE_TURKISH = "Türkçe";  // untranslated
Blockly.Msg.NAO_LEARNFACEOF = "learn face of";  // untranslated
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name";  // untranslated
Blockly.Msg.NAO_LED = "led";  // untranslated
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the LEDs off.";  // untranslated
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the LEDs.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "all";  // untranslated
Blockly.Msg.NAO_LED_CHEST = "chest";  // untranslated
Blockly.Msg.NAO_LED_EAR = "ear";  // untranslated
Blockly.Msg.NAO_LED_EARS = "ears";  // untranslated
Blockly.Msg.NAO_LED_EYE = "eye";  // untranslated
Blockly.Msg.NAO_LED_EYES = "eyes";  // untranslated
Blockly.Msg.NAO_LED_FOOT = "foot";  // untranslated
Blockly.Msg.NAO_LED_HEAD = "head";  // untranslated
Blockly.Msg.NAO_LED_TOOLTIP = "Set the color of a group of LEDs.";  // untranslated
Blockly.Msg.NAO_LOOKAT = "look at";  // untranslated
Blockly.Msg.NAO_MODE_ACTIVE = "active";  // untranslated
Blockly.Msg.NAO_MODE_REST = "rest";  // untranslated
Blockly.Msg.NAO_MODE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_MODE_TOOLTIP = "Turns the stiffness of the robot's motors on and goes to a standing posture, or goes to a resting posture and turns the stiffness off.";  // untranslated
Blockly.Msg.NAO_MOVE = "move";  // untranslated
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint.";  // untranslated
Blockly.Msg.NAO_NAOMARK = "detect NAO mark";  // untranslated
Blockly.Msg.NAO_NAOMARK_TOOLTIP = "Get the number of a detected Nao Mark.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "arm";  // untranslated
Blockly.Msg.NAO_PART_ARMS = "arms";  // untranslated
Blockly.Msg.NAO_PART_BODY = "body";  // untranslated
Blockly.Msg.NAO_PART_HEAD = "head";  // untranslated
Blockly.Msg.NAO_PART_LEG = "leg";  // untranslated
Blockly.Msg.NAO_PART_LEGS = "legs";  // untranslated
Blockly.Msg.NAO_PERFORM = "perform";  // untranslated
Blockly.Msg.NAO_PHRASE = "phrase";  // untranslated
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "play file";  // untranslated
Blockly.Msg.NAO_POINTAT = "point at";  // untranslated
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Rbbot points or looks at a given position";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "Crouch";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBACK = "LyingBack";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "LyingBelly";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "SitRelax";  // untranslated
Blockly.Msg.NAO_POSTURE_STAND = "Stand";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDINIT = "StandInit";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDZERO = "StandZero";  // untranslated
Blockly.Msg.NAO_QQVGA = "160*120";  // untranslated
Blockly.Msg.NAO_QVGA = "320*240";  // untranslated
Blockly.Msg.NAO_RANDOMEYES = "random eyes";  // untranslated
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time.";  // untranslated
Blockly.Msg.NAO_RASTA = "rasta";  // untranslated
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEDWORD = "recognized word";  // untranslated
Blockly.Msg.NAO_RECOGNIZEDWORD_TOOLTIP = "Returns the last word the robot recognized.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORDOR = "or recognize word";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO = "record video";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot.";  // untranslated
Blockly.Msg.NAO_RELATIVE = "relative";  // untranslated
Blockly.Msg.NAO_RESOLUTION = "resolution";  // untranslated
Blockly.Msg.NAO_SAY = "say";  // untranslated
Blockly.Msg.NAO_SAY_TOOLTIP = "The robot says the given text.";  // untranslated
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of a group of LEDs.";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE = "set language";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "stiffness of";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part is turned on or off";  // untranslated
Blockly.Msg.NAO_STOP = "stop movement";  // untranslated
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot stops all movement.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "tai chi";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE = "take picture";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takess a picture and save it on the robot.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if touch sensor on the robot is touched.";  // untranslated
Blockly.Msg.NAO_TOUCH_BUMPER = "bumper";  // untranslated
Blockly.Msg.NAO_TOUCH_FRONT = "front";  // untranslated
Blockly.Msg.NAO_TOUCH_HAND = "hand";  // untranslated
Blockly.Msg.NAO_TOUCH_REAR = "rear";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";  // untranslated
Blockly.Msg.NAO_WALK = "walk";  // untranslated
Blockly.Msg.NAO_WALKTO = "walk to";  // untranslated
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the give position.";  // untranslated
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance.";  // untranslated
Blockly.Msg.NAO_WAVE = "wave";  // untranslated
Blockly.Msg.NAO_WIPE_FOREHEAD = "wipe forehead";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Новая переменная…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Имя новой переменной:";
Blockly.Msg.NO = "нет";
Blockly.Msg.NXTBRICK_TOOLTIP = "Представляет программный блок NXT c подключенными актюаторами и датчиками. Также доступны  встроенные акторы и датчики, такие как кнопки, дисплей и прочие.";
Blockly.Msg.OFF = "выключить";
Blockly.Msg.OLDER_THEN_14 = "I am older then 14!";  // untranslated
Blockly.Msg.ON = "включить";
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Your are not allowed to share. Please activate your account!";  // untranslated
Blockly.Msg.ORA_COMMAND_INVALID = "Неверная Javascript-комманда";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "На сервере невозможно найти конфигурацию робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Конфигурация робота не может быть преобразована и записана в языке программирования используемом для данного робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Программа не может быть преобразована в машинный код.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "Программа не может быть сгенерирована.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Программа не может быть преобразована и записана в языке программирования используемом для робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Программа не может быть сохранена из-за внутренней ошибки.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Программа не может быть преобразована и записана в языке программирования используемом для робота.";
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Во время удаления конфигурации робота произошла ошибка. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Конфигурация удалена";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Название конфигурации не является допустимым идентификатором.";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Конфигурации загружена";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "В базе данных невозможно найти конфигурацию робота.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Конфигурации загружена";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Во время сохранения конфигурации робота произошла ошибка.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "Во время сохранения конфигурации робота в базу данных произошла ошибка.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Конфигурации сохранена";
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "This group already exists";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Обладатель не существует.";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Программа несовместима с конфигурацией.";
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Во время удаления конфигурации робота произошла ошибка. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Программа удалена";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Название вашей программы уже используется системой. Пожалуйста, выберите другое имя и попробуйте еще раз!";
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Программы загружены";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Прогамма не найдена.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Вы не вошли в систему. Пожалуйста, войдите под своим именем пользователя и паролем или создайте нового пользователя.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Программа загружены";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "Эта допустимая NEPO программа и она не может быть загружена!";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "Вы пытаетесь импортировать программу для робота не того типа, который выбран в меню. Пожалуйста, переключите тип в меню робота и попытайтесь снова импортировать!";
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Эта программа уже существует.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "Вы не имеете права модифицировать эту программу!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Эта программа была недавно изменена кем-то другим. Вы можете сохранить изменения в новой программе. Для этого выберите >Сохранить как <!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Программа не найдена, так что ее невозможно обновить.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Программа сохранена";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Программа, которую Вы хотели бы открыть для общего доступа, не существует.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Произошла ошибка при обновлении прошивки Вашего робота.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Прошивка обновлена";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Робот не подключен. Проверьте, включен ли ваш робот, подключите его к серверу и введите пароль от робота в меню соединения. Если при этом у вас возникли проблемы, пожалуйста, посмотрите на наших страницах помощи.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Робот не ждет чтобы выполнить команду.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "jar файл был загружен на робота";
Blockly.Msg.ORA_SERVER_ERROR = "Ошибка сервера";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Проверьте, включен ли Ваш робот и подключен ли он к серверу.  Если при этом у вас возникли проблемы, пожалуйста, посмотрите на наших страницах помощи.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "Вы пытаетесь соединиься робота не того типа, который выбран в меню. Пожалуйста, переключите тип в меню робота и попытайтесь снова импортировать!";
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Ваш робот подключен к серверу.";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "Во время удаления панели инструментов произошла ошибка. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Панель инструментов удалена";
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Имя панели инструментов недействительно.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Панель инструментов загружена";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Панель инструментов не найдена в базе данных.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Панель инструментов загружена";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "Во время сохранения панели инструментов произошла ошибка.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "Во время сохранения базы данных произошла ошибка.";
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Панель инструментов сохранена";
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »roberta-zentrale@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Activation of the user account is successful!";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Your account name or your user name is to long. Please make sure that they are not longer then 25 digits. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "You are using some one or more special characters in your account name! Please remove them. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Проверить, все ли необходимые поля ввода были заполнены.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Данное имя пользователя уже существует в базе данных. Пожалуйста, выберите другое имя пользователя.";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "Пользователь был успешно создан";
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Ошибка при удалении пользователя.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Ошибка при удалении пользователя в базе данных.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Пользователь был успешно удален";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "Этот адрес электронной почты неизвестен, может быть, вы видите это неправильно!";
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "Учетная запись с этим адресом электронной почты уже существует. Пожалуйста, введите другой адрес электронной почты!";
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Пользователи загружены";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Вы ввели неверное имя пользователя или пароль. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Успешный вход в систему";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "This user already belongs to the group";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "Эта ссылка больше не действительна. Пожалуйста, попросите снова сбросить Ваш пароль, если вы до сих пор не вспомнили  его!";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "К сожалению, мы не можем отправить Вам электронное письмо, пожалуйста, свяжитесь с »roberta-zentrale@iais.fraunhofer.de«";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "Мы отправили Вам электронное письмо!";
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "User was not found";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "Пользователь, с которым вы хотели поделиться программой, не существует. Попробуйте снова!";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Вы не можете поделиться программой с самим/самой собой!";
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Ваш пароль был успешно изменен!";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_ANALOG_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_DIGITAL_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_PULSEHIGH_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_PULSELOW_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_WRITE = "write";  // untranslated
Blockly.Msg.PITCH = "pitch";  // untranslated
Blockly.Msg.PLAY = "проиграть";
Blockly.Msg.PLAY_DURATION = "длительность, мс";
Blockly.Msg.PLAY_EIGHTH = "eighth note";  // untranslated
Blockly.Msg.PLAY_FILE = "файл";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Проигрывает аудио файл.";
Blockly.Msg.PLAY_FREQUENZ = "частота, Гц";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Возвращает текущую громкость.";
Blockly.Msg.PLAY_HALF = "half note";  // untranslated
Blockly.Msg.PLAY_NOTE = "note";  // untranslated
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Plays a music note";  // untranslated
Blockly.Msg.PLAY_QUARTER = "quarter note";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Устанавливает громкость.";
Blockly.Msg.PLAY_SIXTEENTH = "sixteenth note";  // untranslated
Blockly.Msg.PLAY_TONE = "тон";
Blockly.Msg.PLAY_TONE_TOOLTIP = "Проигрывает тон.";
Blockly.Msg.PLAY_VOLUME = "громкость";
Blockly.Msg.PLAY_WHOLE = "whole note";  // untranslated
Blockly.Msg.POPUP_ABOUT_JOIN = "Мне нужна помощь.";
Blockly.Msg.POPUP_ABOUT_TEXT = "Roberta Lab Open представляет собой облачную интегрированную среду программирования, которая позволяет детям и подросткам с легкостью программировать различные системы робота. Исходный код этой платформа с полностью открыт, поэтому приветствуются любое участие! И программное обеспечение и инструменты для разработчиков с открытым исходным кодом доступны через серверы Фраунгофера.";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Roberta Lab Open является платформой с открытым исходным кодом, разработанным Fraunhofer IAIS в рамках инициативы http://www.roberta-home.de »Роберта - Обучение с роботами«";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta была организована при сотрудничестве с Google Германии, чтобы упростить программирование обучающих роботов для студентов, учителей и школ. Open Roberta была профинансирована Google.org (2014 - 2015) на 1 млн. евро.";
Blockly.Msg.POPUP_AGE = "Age";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "Внимание";
Blockly.Msg.POPUP_BEFOREUNLOAD = "У Вас есть несохраненные изменения в Вашей программе или конфигурации. Войдите в систему и сохраните Вашу программу или конфигурацию.";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "У Вас есть несохраненные изменения в Вашей программе или конфигурации.";
Blockly.Msg.POPUP_CANCEL = "Отмена";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "изменить пароль ...";
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Вы действительно хотите удалить конфигурацию?";
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Вы действительно хотите удалить программу?";
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Доступна новая версия прошивки для Вашего робота. Вы можете попробовать запустить программу со старой версией, но лучше обновить вашего робота сейчас! Вам просто нужно нажать кнопку 'Обновить сейчас'.";
Blockly.Msg.POPUP_CONTINUE = "продолжить в любом случае";
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I've changed the download folder of my browser permanently. Don't show this popup again and download my programs directly.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_SAVE = "Save";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_SAVE_AS = "Save link as ...";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_A = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_B = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_C = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_D = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Обновить сейчас";
Blockly.Msg.POPUP_EMAIL = "Адрес электронной почты";
Blockly.Msg.POPUP_EMAIL_SEND = "Отослать сейчас";
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don't change it, it probably won't work anymore. It's already copied to your clipboard!</br>$";  // untranslated
Blockly.Msg.POPUP_NAME = "Имя";
Blockly.Msg.POPUP_NEW_PASSWORD = "Новый пароль";
Blockly.Msg.POPUP_OLD_PASSWORD = "Старый пароль";
Blockly.Msg.POPUP_PASSWORD = "Пароль";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "сбросить пароль";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Выполнение программы на роботе было неожиданно прервана!";
Blockly.Msg.POPUP_REGISTER_USER = "Зарегистрироваться сейчас";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Повторить пароль";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Напряжение";
Blockly.Msg.POPUP_ROBOT_NAME = "Имя";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Сначала вы должны подсоединить своего робота.";
Blockly.Msg.POPUP_ROBOT_STATE = "Состояние";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "занят";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "разъединен";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "ждать";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "Система";
Blockly.Msg.POPUP_ROBOT_WAIT = "Время ожидания";
Blockly.Msg.POPUP_STARTUP_COOKIES = "Мы используем куки для персонализации контента и анализа нашего трафика.";
Blockly.Msg.POPUP_STARTUP_HELP = "Вам нужна помощь?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Хорошо, не показывать это окно снова и запомнить мой выбор.";
Blockly.Msg.POPUP_STARTUP_START = "Выберите вашу систему!";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";  // untranslated
Blockly.Msg.POPUP_TOUR = "Совершить тур";
Blockly.Msg.POPUP_USERNAME = "Имя пользователя";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "Вы авторизированы.";
Blockly.Msg.POPUP_VALUE = "Значение";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "разрешить операторы";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Создать вызов '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Опишите эту функцию…";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "выполнить что-то";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "чтобы";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Создаёт процедуру, не возвращающую значение.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "вернуть";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Создаёт процедуру, возвращающую значение.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Предупреждение: эта функция имеет повторяющиеся параметры.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Выделить определение процедуры";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Если первое значение истинно, возвращает второе значение.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "имя параметра:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Добавить входной параметр в функцию.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "параметры";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
Blockly.Msg.PROCEDURES_TITLE = "процедура";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Ошибка: этот блок может быть использован только внутри";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Ошибка: этот блок может быть использован только внутри цикло, который";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.PROGLIST_DELETE_SHARE_WITH_GALLERY = "Your program is allready shared with the gallery. If you change it, it will be automatically updated. Do you want to remove your program from the gallery?";  // untranslated
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Click here to delete your program.";  // untranslated
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Click here to share your program with a friend.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Do you really want to share your program with everybody?";  // untranslated
Blockly.Msg.PULSE_HIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSE_LOW = "pulse time LOW";  // untranslated
Blockly.Msg.REDO = "Повторить";
Blockly.Msg.REMOVE_COMMENT = "Удалить комментарий";
Blockly.Msg.RENAME_VARIABLE = "Переименовать переменную…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Переименовать все переменные '%1' в:";
Blockly.Msg.RETURN = "return";  // untranslated
Blockly.Msg.ROLL = "roll";  // untranslated
Blockly.Msg.SEND_DATA = "данные, которые должны быть отосланы";
Blockly.Msg.SENSOR_AMBIENTLIGHT = "ambientlight sensor";  // untranslated
Blockly.Msg.SENSOR_BATTERY = "Напряжение в В";
Blockly.Msg.SENSOR_COLOUR = "цветовой датчик ";
Blockly.Msg.SENSOR_COMPASS = "компас";
Blockly.Msg.SENSOR_ENCODER = "энеодер";
Blockly.Msg.SENSOR_FLAME = "flame sensor";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesture";  // untranslated
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "active?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GET = "get";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "вернуть значение";
Blockly.Msg.SENSOR_GROVE = "Grove";  // untranslated
Blockly.Msg.SENSOR_GYRO = "гироскоп";
Blockly.Msg.SENSOR_INFRARED = "инфракрасный датчик ";
Blockly.Msg.SENSOR_IS_PIN = "is";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "нажата?";
Blockly.Msg.SENSOR_IS_TOUCHED = "touched?";  // untranslated
Blockly.Msg.SENSOR_JOYSTICK = "joystick";  // untranslated
Blockly.Msg.SENSOR_KEY = "кнопка";
Blockly.Msg.SENSOR_KEY_ANY = "любое";
Blockly.Msg.SENSOR_KEY_DOWN = "вниз";
Blockly.Msg.SENSOR_KEY_ENTER = "ввод";
Blockly.Msg.SENSOR_KEY_ESCAPE = "выход";
Blockly.Msg.SENSOR_KEY_LEFT = "лево";
Blockly.Msg.SENSOR_KEY_RIGHT = "право";
Blockly.Msg.SENSOR_KEY_UP = "вверх";
Blockly.Msg.SENSOR_LIGHT = "датчик освещенности";
Blockly.Msg.SENSOR_MIC = "microphone";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "в мс";
Blockly.Msg.SENSOR_PIN = "pin";  // untranslated
Blockly.Msg.SENSOR_PRESSED = "(нажата)";
Blockly.Msg.SENSOR_RESET = "сбросить";
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_SONAR = "сонар";
Blockly.Msg.SENSOR_SOUND = "звуковой датчик";
Blockly.Msg.SENSOR_TEMPERATURE = "temperature sensor";  // untranslated
Blockly.Msg.SENSOR_TIME = "время";
Blockly.Msg.SENSOR_TIMER = "таймер";
Blockly.Msg.SENSOR_TOUCH = "датчик касания";
Blockly.Msg.SENSOR_ULTRASONIC = "ультразвуковой датчик";
Blockly.Msg.SENSOR_VALUE = "value";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "Оpen Roberta Labв данный момент недоступна. </br> Пожалуйста, проверьте подключение к Интернету и попробуйте перезагрузить этот сайт. Если проблема не устранена, пожалуйста, не стесняйтесь связаться с нами по электронной почте: </ BR> roberta-zentrale@iais.fraunhofer.de";
Blockly.Msg.SET = "установить";
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "К сожалению, вы не можете использовать этот блок в симуляции!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Этот датчик не в конфигурации! Поведение программы на реальном роботе не будет соответствовать ожидаемому!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "Инфракрасный датчик не подключен в конфигурации! Поведение программы на реальном роботе не будет соответствовать ожидаемому! Пожалуйста, проверьте конфигурацию робота!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "В этом блоке вы использовали неправильный порт для датчика! В этом блоке вы использовали неправильный порт датчика! Поведение программы на реальном робота будет отличаться, чем ожидалось, пожалуйста, проверьте конфигурацию робота! Пожалуйста, проверьте конфигурацию робота!";
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Возвращает текущее показание от датчика звука.";
Blockly.Msg.SOUND_TOOLTIP = "Представляет датчик звука.";
Blockly.Msg.START = "старт";
Blockly.Msg.START_ACTIVITY = "активность";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Начинает дополнительную активность.";
Blockly.Msg.START_PROGRAM = "старт";
Blockly.Msg.START_PROGRAM_DEBUG = "показать показатели датчиков";
Blockly.Msg.START_TOOLTIP = "Начальная точка для главной программы.";
Blockly.Msg.STRENGTH = "strength";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Конфигурация робота";
Blockly.Msg.TAB_PROGRAM = "Программа";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperatur sensor.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "добавить текст";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "к";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Добавить текст к переменной «%1».";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "в строчные буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "в Заглавные Начальные Буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "в ЗАГЛАВНЫЕ БУКВЫ";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
Blockly.Msg.TEXT_CHARAT_FIRST = "взять первую букву";
Blockly.Msg.TEXT_CHARAT_FROM_END = "взять букву № с конца";
Blockly.Msg.TEXT_CHARAT_FROM_START = "взять букву №";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_CHARAT_LAST = "взять последнюю букву";
Blockly.Msg.TEXT_CHARAT_RANDOM = "взять случайную букву";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Возвращает букву в указанной позиции.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Добавить элемент к тексту.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "соединить";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "по букву № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "по букву №";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "по последнюю букву";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "в тексте";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "взять подстроку с первой буквы";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "взять подстроку с буквы № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "взять подстроку с буквы №";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Возвращает указанную часть текста.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "найти первое вхождение текста";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "найти последнее вхождение текста";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает 0, если текст не найден.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Возвращает значение истина, если предоставленный текст пуст.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "создать текст из";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Создаёт фрагмент текста, объединяя любое число элементов";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "длина %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Возвращает число символов (включая пробелы) в заданном тексте.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "напечатать %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Печатает текст, число или другой объект.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Запросить у пользователя число.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Запросить у пользователя текст.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "запросить число с подсказкой";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "запросить текст с подсказкой";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://ru.wikipedia.org/wiki/Строковый_тип";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Буква, слово или строка текста.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "обрезать пробелы с двух сторон";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "обрезать пробелы слева";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "обрезать пробелы справа";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Возвращает копию текста с пробелами, удалеными с одного или обоих концов.";
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Возвращает текущее показание таймера.";
Blockly.Msg.TIMER_RESET_TOOLTIP = "Сбросить таймер.";
Blockly.Msg.TODAY = "Сегодня";
Blockly.Msg.TOOLBOX_ACTION = "Действие";
Blockly.Msg.TOOLBOX_ANIMATION = "Animation";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Цвета";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Сообщения";
Blockly.Msg.TOOLBOX_CONTROL = "Контроль";
Blockly.Msg.TOOLBOX_DECISION = "Решения";
Blockly.Msg.TOOLBOX_DISPLAY = "Дисплей";
Blockly.Msg.TOOLBOX_DRIVE = "Ехать";
Blockly.Msg.TOOLBOX_IMAGE = "Images";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Подсветка";
Blockly.Msg.TOOLBOX_LIST = "Списки";
Blockly.Msg.TOOLBOX_LOGIC = "Логика";
Blockly.Msg.TOOLBOX_LOOP = "Циклы";
Blockly.Msg.TOOLBOX_MATH = "Математика";
Blockly.Msg.TOOLBOX_MOVE = "Движение";
Blockly.Msg.TOOLBOX_PIN = "Pin";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Функции";
Blockly.Msg.TOOLBOX_SENSOR = "Датчики";
Blockly.Msg.TOOLBOX_SOUND = "Звуки";
Blockly.Msg.TOOLBOX_TEXT = "Текст";
Blockly.Msg.TOOLBOX_VARIABLE = "Переменные";
Blockly.Msg.TOOLBOX_VISION = "Vision";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Ждать";
Blockly.Msg.TOOLBOX_WALK = "Walk";  // untranslated
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Нажат ли датчик касания?";
Blockly.Msg.TOUCH_TOOLTIP = "Нажат ли датчик касания?";
Blockly.Msg.TOUR1_DESCRIPTION00 = "слудующее";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Добро пожаловать,  <br>  нажмите на »следующее« и начать тур по Open Roberta Lab. <br> Я покажу Вам, как запрограммировать робота с NEPO. <br> Вы можете закончить этот тур в любое время. Для этого нажмите на »X« в правом верхнем углу.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Меню ;-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Здесь вы можете найти все, что нужно для программирования робота! <br> <SPAN class= 'typcn typcn-документ-текст'> </ SPAN> Сохранение и загрузка программ <br> <SPAN class= 'typcn typcn-Roberta'> </ SPAN> Подключение робота к Roberta Lab Open <br> <SPAN class= 'typcn typcn-lightbulb'> </ SPAN> Помощь для всех видов проблем <br> <SPAN class= 'typcn typcn user'> </ SPAN> Все об учетных записях пользователей, например, вход или выход из системы";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Нажмите здесь чтобы перейти к конфигурации робота";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Вы можете изменить конфигурацию робота позже, <br> если Вы сконструировали другого робота. <br> Если у Вас нет робота и Вы хотите проверить Вашу программу в симуляции. <br> будет применена эта конфигурация.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Нажмите здесь чтобы переключиться обратно в область программирования!";
Blockly.Msg.TOUR1_DESCRIPTION07 = "Панель инструментов. <br> Здесь вы можете найти все программные блоки.";
Blockly.Msg.TOUR1_DESCRIPTION08 = "Каждая программа начинается блока запуска программы. «. Следующие программные блоки, которые должны выполнить робот, должны быть присоединены к этому блоку. <br> Просто перетащите и присоедините нужный блок прямо под стартовым блоком.";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Здесь вы найдете некоторые клавиши быстрого доступа<br> Слева направо: <br> <SPAN class= 'typcn typcn-медиа-игра'> </ SPAN> Нажмите здесь, чтобы выполнить программу на реальном роботе  <br> <SPAN class= 'typcn typcn-media-play-outline'> </ SPAN> Нажмите здесь, чтобы запустить робота в симуляции <br> <SPAN class= 'typcn typcn-cloud-storage'> </ SPAN> Сохранить Вашу программу, но прежде вам нужно войти в систему <br> <SPAN class= 'typcn typcn-zoom'> </ SPAN> Нажмите здесь если Вы хотите изменить масштаб изображения блоков <br> <SPAN class= 'typcn typcn-acrhive'> </ SPAN> Мусорная корзина! Просто переместите блоки в корзину чтобы их удалить <br> & NBSP;. & NBSP; & NBSP; & NBSP; & NBSP; & NBSP; Внимание: как только блоки будут удалены Вы не сможете восстановить их <br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "Нажмите на »Действие«";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Теперь перетащите и закрепите новый блок чуть ниже блока запуска программы. Таким образом они будут подключены.";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Теперь проверьте свою программу в симуляции!";
Blockly.Msg.TOUR1_DESCRIPTION13a = "and test your program in the simulation!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION15 = "Чудесно, <br> Ваш робот проедет 20 см вперед, <br> это то, что вы запрограммировали!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "До свидания и увлекательного программирования!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Возвращает текущее показание от ультразвукового датчика.";
Blockly.Msg.ULTRASONIC_TOOLTIP = "Представляет ультразвуковой датчик.";
Blockly.Msg.UNDO = "Отменить";
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Valid special characters: »=+!?.,%#+&^@_-«";  // untranslated
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Это поле не может быть пустым!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "The max. lenght is 25 characters!";  // untranslated
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Минимальная длина пароля - 6 символов!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Пароли должны совпадать!";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Длина токена - 8 символов!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Пожалуйста, введите действительный адрес электронной почты.";
Blockly.Msg.VALUE_TO = "value to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "элемент";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Создать блок \"присвоить\" для %1";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Возвращает значение этой переменной.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Объявляет глобальную переменную.";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Объявляет локальную переменную.";
Blockly.Msg.VARIABLES_SET = "присвоить %1 = %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Создать вставку %1";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Присваивает переменной значение вставки.";
Blockly.Msg.VARIABLES_TITLE = "переменная";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "Список логических переменных";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "Список цветов";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "Список соединений";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "List Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "Список числе";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "Список строк";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Лоническая переменная";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Цвет";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Соединение";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Число";
Blockly.Msg.VARIABLES_TYPE_STRING = "Строка";
Blockly.Msg.WAIT = "ждать, мс";
Blockly.Msg.WAIT_FOR_TOOLTIP = "Ждет определенного значения показания датчика.";
Blockly.Msg.WAIT_OR = "или ждать до";
Blockly.Msg.WAIT_TIME_TOOLTIP = "Ждет определенное время в миллисекундах.";
Blockly.Msg.WAIT_TOOLTIP = "Ждет пока условине не станет правдой.";
Blockly.Msg.WAIT_UNTIL = "ждать пока";
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Sends the value to chosen pin.";  // untranslated
Blockly.Msg.X = "x";  // untranslated
Blockly.Msg.Y = "y";  // untranslated
Blockly.Msg.YAW = "yaw";  // untranslated
Blockly.Msg.YES = "да";
Blockly.Msg.YOUNGER_THEN_14 = "I am younger then 14!";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;