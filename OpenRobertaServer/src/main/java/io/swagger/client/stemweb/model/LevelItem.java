/*
 * stemgarden api
 * stemgarden api
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.stemweb.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.UUID;

/**
 * LevelItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-30T00:47:33.626+08:00")
public class LevelItem {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("level_name")
  private String levelName = null;

  @SerializedName("level_url")
  private String levelUrl = null;

  @SerializedName("level_order")
  private Integer levelOrder = null;

  @SerializedName("type_id")
  private Long typeId = null;

  public LevelItem id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public LevelItem levelName(String levelName) {
    this.levelName = levelName;
    return this;
  }

   /**
   * Get levelName
   * @return levelName
  **/
  @ApiModelProperty(value = "")
  public String getLevelName() {
    return levelName;
  }

  public void setLevelName(String levelName) {
    this.levelName = levelName;
  }

  public LevelItem levelUrl(String levelUrl) {
    this.levelUrl = levelUrl;
    return this;
  }

   /**
   * Get levelUrl
   * @return levelUrl
  **/
  @ApiModelProperty(value = "")
  public String getLevelUrl() {
    return levelUrl;
  }

  public void setLevelUrl(String levelUrl) {
    this.levelUrl = levelUrl;
  }

  public LevelItem levelOrder(Integer levelOrder) {
    this.levelOrder = levelOrder;
    return this;
  }

   /**
   * Get levelOrder
   * @return levelOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getLevelOrder() {
    return levelOrder;
  }

  public void setLevelOrder(Integer levelOrder) {
    this.levelOrder = levelOrder;
  }

  public LevelItem typeId(Long typeId) {
    this.typeId = typeId;
    return this;
  }

   /**
   * Get typeId
   * @return typeId
  **/
  @ApiModelProperty(value = "")
  public Long getTypeId() {
    return typeId;
  }

  public void setTypeId(Long typeId) {
    this.typeId = typeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LevelItem levelItem = (LevelItem) o;
    return Objects.equals(this.id, levelItem.id) &&
        Objects.equals(this.levelName, levelItem.levelName) &&
        Objects.equals(this.levelUrl, levelItem.levelUrl) &&
        Objects.equals(this.levelOrder, levelItem.levelOrder) &&
        Objects.equals(this.typeId, levelItem.typeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, levelName, levelUrl, levelOrder, typeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LevelItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    levelName: ").append(toIndentedString(levelName)).append("\n");
    sb.append("    levelUrl: ").append(toIndentedString(levelUrl)).append("\n");
    sb.append("    levelOrder: ").append(toIndentedString(levelOrder)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

