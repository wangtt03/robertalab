# block types, that are added by this robot. Syntax (for category, see enum Category):
# blockType.<unique-name-of-the-block-type> = <category>,<full-path-of-implementing-class>,<blockly-xml-element-name-1>,...,<blockly-xml-element-name-n>
blockType.COLOR_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor,robSensors_colour_getSample,sim_colour_getSample
blockType.LIGHT_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.LightSensor,robSensors_light_getSample,sim_light_getSample
blockType.SOUND_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor,robSensors_sound_getSample,sim_sound_getSample
blockType.TOUCH_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor,robSensors_touch_isPressed,sim_touch_isPressed
blockType.COMPASS_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor,robSensors_compass_getSample,mbedSensors_compass_getSample
blockType.ULTRASONIC_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor,robSensors_ultrasonic_getSample,sim_ultrasonic_getSample
blockType.INFRARED_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor,robSensors_infrared_getSample
blockType.ENCODER_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor,robSensors_encoder_getSample,robSensors_encoder_reset
blockType.BRICK_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.BrickSensor,robSensors_key_isPressed,mbedSensors_key_isPressed
blockType.GYRO_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor,robSensors_gyro_getSample,robSensors_gyro_reset,makeblockSensors_gyroscope_getSample
blockType.TIMER_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor,robSensors_timer_getSample,mbedsensors_timer_getsample,robSensors_timer_reset,mbedsensors_timer_reset
blockType.TEMP_SENSING=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor,makeblockSensors_temperature_getSample,mbedSensors_temperature_getSample
blockType.SENSOR_GET_SAMPLE=SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.GetSampleSensor,robSensors_getSample,robSensors_getSample_ardu,sim_getSample
blockType.STRING_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.StringConst,text
blockType.COLOR_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.ColorConst,robColour_picker
blockType.NULL_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.NullConst,logic_null
blockType.BOOL_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.BoolConst,logic_boolean
blockType.NUM_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.NumConst,math_number
blockType.MATH_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.MathConst,math_constant
blockType.CONNECTION_CONST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.ConnectConst,robCommunication_connection
blockType.EMPTY_LIST=EXPR,de.fhg.iais.roberta.syntax.lang.expr.EmptyList,lists_create_empty
blockType.VAR=EXPR,de.fhg.iais.roberta.syntax.lang.expr.Var,variables_get
blockType.VAR_DECLARATION=EXPR,de.fhg.iais.roberta.syntax.lang.expr.VarDeclaration,robLocalVariables_declare,robGlobalvariables_declare
blockType.UNARY=EXPR,de.fhg.iais.roberta.syntax.lang.expr.Unary,logic_negate
blockType.BINARY=EXPR,de.fhg.iais.roberta.syntax.lang.expr.Binary,logic_compare,logic_operation,math_arithmetic,math_change,robMath_change,math_modulo,robText_append
blockType.START_ACTIVITY_TASK=EXPR,de.fhg.iais.roberta.syntax.lang.blocksequence.StartActivityTask,robControls_start_activity
blockType.IF_STMT=STMT,de.fhg.iais.roberta.syntax.lang.stmt.IfStmt,logic_ternary,controls_if,robControls_if,robControls_ifElse
blockType.REPEAT_STMT=STMT,de.fhg.iais.roberta.syntax.lang.stmt.RepeatStmt,robControls_loopForever,robControls_loopForever_ardu,controls_whileUntil,controls_for,robControls_for,controls_repeat_ext,controls_repeat,controls_forEach,robControls_forEach
blockType.ASSIGN_STMT=STMT,de.fhg.iais.roberta.syntax.lang.stmt.AssignStmt,variables_set
blockType.STMT_FLOW_CONTROL=STMT,de.fhg.iais.roberta.syntax.lang.stmt.StmtFlowCon,controls_flow_statements
blockType.WAIT_STMT=STMT,de.fhg.iais.roberta.syntax.lang.stmt.WaitStmt,robControls_wait_for,robControls_wait,mbedcontrols_wait_for,naocontrols_wait_for
blockType.WAIT_TIME=STMT,de.fhg.iais.roberta.syntax.lang.stmt.WaitTimeStmt,robControls_wait_time
blockType.TURN_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.TurnAction,robActions_motorDiff_turn,robActions_motorDiff_turn_for
blockType.DRIVE_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.DriveAction,robActions_motorDiff_on,robActions_motorDiff_on_for
blockType.CURVE_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.CurveAction,robActions_motorDiff_curve,robActions_motorDiff_curve_for
blockType.SHOW_TEXT_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.display.ShowTextAction,robActions_display_text
blockType.SHOW_PICTURE_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.display.ShowPictureAction,robActions_display_picture
blockType.TONE_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.sound.ToneAction,robActions_play_tone,mbedActions_play_tone
blockType.LIGHT_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.light.LightAction,robActions_brickLight_on,sim_LED_on
blockType.CLEAR_DISPLAY_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.display.ClearDisplayAction,robActions_display_clear,mbedActions_display_clear
blockType.MOTOR_ON_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.MotorOnAction,robActions_motor_on,robActions_motor_on_for,sim_motor_on,sim_motor_on_for,robActions_motor_on_for_ardu,mbedActions_motor_on
blockType.MOTOR_GET_POWER_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.MotorGetPowerAction,robActions_motor_getPower
blockType.MOTOR_SET_POWER_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.MotorSetPowerAction,robActions_motor_setPower
blockType.MOTOR_STOP_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.MotorStopAction,robActions_motor_stop,sim_motor_stop,mbedActions_motor_stop
blockType.PLAY_FILE_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.sound.PlayFileAction,robActions_play_file
blockType.VOLUME_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.sound.VolumeAction,robActions_play_setVolume,robActions_play_getVolume
blockType.LIGHT_STATUS_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.light.LightStatusAction,robActions_brickLight_off,robActions_brickLight_reset,sim_LED_off,mbedActions_leds_off
blockType.STOP_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.motor.MotorDriveStopAction,robActions_motorDiff_stop
blockType.MAIN_TASK=TASK,de.fhg.iais.roberta.syntax.lang.blocksequence.MainTask,robControls_start,robControls_start_ardu,mbedcontrols_start
blockType.ACTIVITY_TASK=TASK,de.fhg.iais.roberta.syntax.lang.blocksequence.ActivityTask,robControls_activity
blockType.TEXT_INDEX_OF_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.IndexOfFunct,lists_indexOf,robLists_indexOf
blockType.GET_SUB_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.GetSubFunct,lists_getSublist,robLists_getSublist
blockType.MATH_SINGLE_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.MathSingleFunct,math_round,math_trig,math_single
blockType.MATH_ON_LIST_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.MathOnListFunct,math_on_list
blockType.MATH_CONSTRAIN_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.MathConstrainFunct,math_constrain
blockType.MATH_RANDOM_INT_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.MathRandomIntFunct,math_random_int
blockType.MATH_RANDOM_FLOAT_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.MathRandomFloatFunct,math_random_float
blockType.MATH_NUM_PROP_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.MathNumPropFunct,math_number_property
blockType.LENGTH_OF_IS_EMPTY_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.LengthOfIsEmptyFunct,lists_length,robLists_length,lists_isEmpty,robLists_isEmpty
blockType.TEXT_JOIN_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.TextJoinFunct,robText_join,text_join
blockType.TEXT_PRINT_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.TextPrintFunct,text_print
blockType.LIST_REPEAT_FUNCT=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.ListRepeat,lists_repeat,robLists_repeat
blockType.LIST_CREATE=EXPR,de.fhg.iais.roberta.syntax.lang.expr.ListCreate,lists_create_with,robLists_create_with
blockType.LIST_INDEX_OF=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.ListGetIndex,lists_getIndex,robLists_getIndex
blockType.LIST_SET_INDEX=FUNCTION,de.fhg.iais.roberta.syntax.lang.functions.ListSetIndex,lists_setIndex,robLists_setIndex
blockType.METHOD_IF_RETURN=METHOD,de.fhg.iais.roberta.syntax.lang.methods.MethodIfReturn,robProcedures_ifreturn
blockType.METHOD_VOID=METHOD,de.fhg.iais.roberta.syntax.lang.methods.MethodVoid,robProcedures_defnoreturn
blockType.METHOD_CALL=METHOD,de.fhg.iais.roberta.syntax.lang.methods.MethodCall,robProcedures_callnoreturn,robProcedures_callreturn
blockType.METHOD_RETURN=METHOD,de.fhg.iais.roberta.syntax.lang.methods.MethodReturn,robProcedures_defreturn
blockType.BLUETOOTH_CHECK_CONNECT_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.communication.BluetoothCheckConnectAction,robCommunication_checkConnection
blockType.BLUETOOTH_CONNECT_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.communication.BluetoothConnectAction,robCommunication_startConnection
blockType.BLUETOOTH_SEND_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.communication.BluetoothSendAction,robCommunication_sendBlock
blockType.BLUETOOTH_WAIT_FOR_CONNECTION_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.communication.BluetoothWaitForConnectionAction,robCommunication_waitForConnection
blockType.BLUETOOTH_RECEIVED_ACTION=ACTOR,de.fhg.iais.roberta.syntax.action.communication.BluetoothReceiveAction,robCommunication_receiveBlock